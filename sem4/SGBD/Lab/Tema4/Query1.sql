-- DIRTY READS - a doua
-- GRESIT
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRANSACTION
	SELECT * FROM Clienti WHERE idClient = 21;
	INSERT INTO Istoric VALUES ('Am citit din Clienti')
COMMIT TRANSACTION

-- SOLUTIE
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
BEGIN TRANSACTION
	SELECT * FROM Clienti WHERE idClient = 21
	INSERT INTO Istoric VALUES ('Am citit din Clienti')
COMMIT TRANSACTION


-- UNREPEATABLE READS - prima
-- GRESIT
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN TRANSACTION;
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('UNREPEATABLE READS Am citit din Clienti');
	WAITFOR DELAY '00:00:5';
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('UNREPEATABLE READS Am citit din Clienti');
COMMIT TRANSACTION;

-- SOLUTIE
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
BEGIN TRANSACTION;
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('UNREPEATABLE READS Am citit din Clienti');
	WAITFOR DELAY '00:00:5';
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('UNREPEATABLE READS Am citit din Clienti');
COMMIT TRANSACTION;


-- PHANTOM READS - prima
-- GRESIT
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
BEGIN TRANSACTION;
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('PHANTOM READS Am citit din Clienti');
	WAITFOR DELAY '00:00:5';
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('PHANTOM READS Am citit din Clienti');
COMMIT TRANSACTION;

-- SOLUTIE
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE ;
BEGIN TRANSACTION;
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('PHANTOM READS Am citit din Clienti');
	WAITFOR DELAY '00:00:5';
	SELECT * FROM Clienti;
	INSERT INTO Istoric VALUES ('PHANTOM READS Am citit din Clienti');
COMMIT TRANSACTION;


-- DEADLOCK
-- TRAN 1 GRESIT
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
BEGIN TRY
	BEGIN TRAN;
		UPDATE Clienti SET nume = 'deadlock tran1' WHERE idClient = 23
		WAITFOR DELAY '00:00:5'
		UPDATE Producatori SET nume = 'deadlock tran1' WHERE idProducator = 20
	COMMIT TRAN;
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION
	INSERT INTO Istoric VALUES ('DEADLOCK tran1 victim');
END CATCH

-- TRAN 1 SOLUTIE
BEGIN TRY
	BEGIN TRAN;
		UPDATE Producatori SET nume = 'deadlock tran1' WHERE idProducator = 20
		WAITFOR DELAY '00:00:5'
		UPDATE Clienti SET nume = 'deadlock tran1' WHERE idClient = 23
	COMMIT TRAN;
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION
	INSERT INTO Istoric VALUES ('DEADLOCK tran1 victim');
END CATCH

